<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on YSHURIK</title>
    <link>https://yshurik.github.io/post/</link>
    <description>Recent content in Posts on YSHURIK</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Apr 2017 20:05:44 +0200</lastBuildDate>
    
	<atom:link href="https://yshurik.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create QPdfJs</title>
      <link>https://yshurik.github.io/post/create-qpdfjs/</link>
      <pubDate>Thu, 27 Apr 2017 20:05:44 +0200</pubDate>
      
      <guid>https://yshurik.github.io/post/create-qpdfjs/</guid>
      <description>Today I would like to show the power of Qt technology. The framework was born more than a decade ago but still due to a lot of efforts from talented developers and Qt community keep us surprising.
I would like to show an example of developing an application with very small efforts and have it on the intersection of desktop application programming and the web programming.
Few weeks ago I was looking for approach to convert an pdf document to a image with consideration of having it in batch mode in future.</description>
    </item>
    
    <item>
      <title>Init</title>
      <link>https://yshurik.github.io/post/init/</link>
      <pubDate>Wed, 12 Apr 2017 17:49:36 +0200</pubDate>
      
      <guid>https://yshurik.github.io/post/init/</guid>
      <description>Hugo init post</description>
    </item>
    
    <item>
      <title>SQLite tree structures and queries to get sub-trees</title>
      <link>https://yshurik.github.io/post/sqlite-tree-structures-and-queries-to-get-sub-trees/</link>
      <pubDate>Fri, 03 Jun 2016 22:13:05 +0200</pubDate>
      
      <guid>https://yshurik.github.io/post/sqlite-tree-structures-and-queries-to-get-sub-trees/</guid>
      <description>SQLite is wonderful!
Just today I found that SQLite support queries with a recurse to get the inner sub-trees:
CREATE TABLE els ( id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE ,pid INTEGER DEFAULT NULL REFERENCES els ,name TEXT ); INSERT INTO els (id, pid, name) VALUES (1, NULL, &#39;top&#39;); INSERT INTO els (id, pid, name) VALUES (2, 1, &#39;x2&#39;); INSERT INTO els (id, pid, name) VALUES (3, 1, &#39;x1&#39;); INSERT INTO els (id, pid, name) VALUES (4, 3, &#39;y2&#39;); INSERT INTO els (id, pid, name) VALUES (5, 3, &#39;y1&#39;); INSERT INTO els (id, pid, name) VALUES (6, 1, &#39;x3&#39;); INSERT INTO els (id, pid, name) VALUES (7, 6, &#39;w2&#39;); INSERT INTO els (id, pid, name) VALUES (8, 6, &#39;w1&#39;); INSERT INTO els (id, pid, name) VALUES (9, 7, &#39;z1&#39;); INSERT INTO els (id, pid, name) VALUES (10, 7, &#39;z2&#39;);  Tree</description>
    </item>
    
  </channel>
</rss>